name: DevSecOps Pipeline

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  code-quality:
    name: Code Quality and Security Checks
    runs-on: ubuntu-latest

    steps:
      # Checkout code dari repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 bandit safety
      # 1. Flake8 untuk Code Quality
      - name: Run Flake8 (Code Quality)
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics > flake8_report.txt || true
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics >> flake8_report.txt
      - name: Check Flake8 Report for Violations
        run: |
          if grep -q "E9\|F63\|F7\|F82" flake8_report.txt; then
            echo "❌ Flake8 found critical issues in your code!"
            cat flake8_report.txt
            exit 1
          else
            echo "✅ No critical issues found by Flake8."
          fi
      - name: Upload Flake8 Report
        uses: actions/upload-artifact@v4
        with:
          name: flake8-report
          path: flake8_report.txt

      # 2. Bandit untuk Static Application Security Testing (SAST)
      - name: Run Bandit (SAST)
        run: |
          bandit -r . -o bandit_report.txt -f txt || true

      - name: Check Bandit Report for Issues
        run: |
          if grep -q "Issue:" bandit_report.txt; then
            echo "❌ Bandit found security issues!"
            cat bandit_report.txt
            exit 1
          else
            echo "✅ No issues found by Bandit."
          fi
      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit_report.txt


      # 3. Safety untuk Dependency Scanning
      - name: Run Safety (Dependency Scanning)
        run: |
          safety check -r requirements.txt > safety_report.txt || true

      - name: Check Safety Report for Vulnerabilities
        run: |
          if grep -q "vulnerable" safety_report.txt; then
            echo "❌ Safety found vulnerable dependencies!"
            cat safety_report.txt
            exit 1
          else
            echo "✅ No vulnerable dependencies found."
          fi

      - name: Upload Safety Report
        uses: actions/upload-artifact@v4
        with:
          name: safety-report
          path: safety_report.txt
