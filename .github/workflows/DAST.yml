name: DevSecOps Pipeline with DAST

on:
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging ]

jobs:
  running-apps:
    name: Running Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        continue-on-error: true

      - name: Start the Application
        run: |
          nohup python app.py &
          sleep 5  # Beri waktu aplikasi untuk start
        continue-on-error: true

      - name: Check if App is Running
        run: |
          curl -I http://127.0.0.1:8081 || (echo "❌ App is not running!" && exit 1)

  dast-testing:
    name: DAST Testing with OWASP ZAP
    runs-on: ubuntu-latest
    needs: running-apps

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Start OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "http://127.0.0.1:8081"
          format: "html,json"
        continue-on-error: true

      - name: Verify OWASP ZAP Reports
        run: |
          echo "Verifying OWASP ZAP report files..."
          ls -al
          if [ ! -f report_html.html ]; then
            echo "❌ report_html.html not found!"
            exit 1
          fi
          if [ ! -f report_json.json ]; then
            echo "❌ report_json.json not found!"
            exit 1
          fi

      - name: Combine Reports into ZIP
        run: |
          echo "Zipping OWASP ZAP reports..."
          zip -r dast_reports.zip report_html.html report_json.json
          ls -l

      - name: Upload OWASP ZAP Reports as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dast-reports
          path: dast_reports.zip

      - name: Check OWASP ZAP Report for Issues
        run: |
          if grep -i "vulnerability" report_html.html; then
            echo "❌ OWASP ZAP found vulnerabilities!"
            exit 1
          else
            echo "✅ No vulnerabilities found by OWASP ZAP."
          fi
